// Generated from React.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ReactLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly Literal = 24;
	public static readonly IntegerLiteral = 25;
	public static readonly StringLiteral = 26;
	public static readonly Identifier = 27;
	public static readonly WS = 28;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "Literal", "IntegerLiteral", 
		"StringLiteral", "EscapeSequence", "Identifier", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'='", "';'", "'let'", "'var'", "'const'", "'function'", "'('", 
		"')'", "','", "'{'", "'}'", "'*'", "'/'", "'+'", "'-'", "'>'", "'>='", 
		"'<='", "'<'", "'=='", "'!='", "'=>'", "'console.log'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "Literal", "IntegerLiteral", "StringLiteral", 
		"Identifier", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ReactLexer._LITERAL_NAMES, ReactLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ReactLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ReactLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "React.g4"; }

	// @Override
	public get ruleNames(): string[] { return ReactLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ReactLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ReactLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ReactLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1E\xAD\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04" +
		"\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06" +
		"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07" +
		"\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03" +
		"\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x05\x19\x8C\n" +
		"\x19\x03\x1A\x06\x1A\x8F\n\x1A\r\x1A\x0E\x1A\x90\x03\x1B\x03\x1B\x03\x1B" +
		"\x07\x1B\x96\n\x1B\f\x1B\x0E\x1B\x99\v\x1B\x03\x1B\x03\x1B\x03\x1C\x03" +
		"\x1C\x03\x1C\x03\x1D\x03\x1D\x07\x1D\xA2\n\x1D\f\x1D\x0E\x1D\xA5\v\x1D" +
		"\x03\x1E\x06\x1E\xA8\n\x1E\r\x1E\x0E\x1E\xA9\x03\x1E\x03\x1E\x02\x02\x02" +
		"\x1F\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F" +
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F" +
		"\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16" +
		"+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x029\x02\x1D" +
		";\x02\x1E\x03\x02\b\x03\x022;\x04\x02$$^^\b\x02$$))^^ppttvv\x05\x02C\\" +
		"aac|\x06\x022;C\\aac|\x05\x02\v\f\x0F\x0F\"\"\x02\xB1\x02\x03\x03\x02" +
		"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x03=\x03\x02\x02\x02\x05?\x03" +
		"\x02\x02\x02\x07A\x03\x02\x02\x02\tE\x03\x02\x02\x02\vI\x03\x02\x02\x02" +
		"\rO\x03\x02\x02\x02\x0FX\x03\x02\x02\x02\x11Z\x03\x02\x02\x02\x13\\\x03" +
		"\x02\x02\x02\x15^\x03\x02\x02\x02\x17`\x03\x02\x02\x02\x19b\x03\x02\x02" +
		"\x02\x1Bd\x03\x02\x02\x02\x1Df\x03\x02\x02\x02\x1Fh\x03\x02\x02\x02!j" +
		"\x03\x02\x02\x02#l\x03\x02\x02\x02%o\x03\x02\x02\x02\'r\x03\x02\x02\x02" +
		")t\x03\x02\x02\x02+w\x03\x02\x02\x02-z\x03\x02\x02\x02/}\x03\x02\x02\x02" +
		"1\x8B\x03\x02\x02\x023\x8E\x03\x02\x02\x025\x92\x03\x02\x02\x027\x9C\x03" +
		"\x02\x02\x029\x9F\x03\x02\x02\x02;\xA7\x03\x02\x02\x02=>\x07?\x02\x02" +
		">\x04\x03\x02\x02\x02?@\x07=\x02\x02@\x06\x03\x02\x02\x02AB\x07n\x02\x02" +
		"BC\x07g\x02\x02CD\x07v\x02\x02D\b\x03\x02\x02\x02EF\x07x\x02\x02FG\x07" +
		"c\x02\x02GH\x07t\x02\x02H\n\x03\x02\x02\x02IJ\x07e\x02\x02JK\x07q\x02" +
		"\x02KL\x07p\x02\x02LM\x07u\x02\x02MN\x07v\x02\x02N\f\x03\x02\x02\x02O" +
		"P\x07h\x02\x02PQ\x07w\x02\x02QR\x07p\x02\x02RS\x07e\x02\x02ST\x07v\x02" +
		"\x02TU\x07k\x02\x02UV\x07q\x02\x02VW\x07p\x02\x02W\x0E\x03\x02\x02\x02" +
		"XY\x07*\x02\x02Y\x10\x03\x02\x02\x02Z[\x07+\x02\x02[\x12\x03\x02\x02\x02" +
		"\\]\x07.\x02\x02]\x14\x03\x02\x02\x02^_\x07}\x02\x02_\x16\x03\x02\x02" +
		"\x02`a\x07\x7F\x02\x02a\x18\x03\x02\x02\x02bc\x07,\x02\x02c\x1A\x03\x02" +
		"\x02\x02de\x071\x02\x02e\x1C\x03\x02\x02\x02fg\x07-\x02\x02g\x1E\x03\x02" +
		"\x02\x02hi\x07/\x02\x02i \x03\x02\x02\x02jk\x07@\x02\x02k\"\x03\x02\x02" +
		"\x02lm\x07@\x02\x02mn\x07?\x02\x02n$\x03\x02\x02\x02op\x07>\x02\x02pq" +
		"\x07?\x02\x02q&\x03\x02\x02\x02rs\x07>\x02\x02s(\x03\x02\x02\x02tu\x07" +
		"?\x02\x02uv\x07?\x02\x02v*\x03\x02\x02\x02wx\x07#\x02\x02xy\x07?\x02\x02" +
		"y,\x03\x02\x02\x02z{\x07?\x02\x02{|\x07@\x02\x02|.\x03\x02\x02\x02}~\x07" +
		"e\x02\x02~\x7F\x07q\x02\x02\x7F\x80\x07p\x02\x02\x80\x81\x07u\x02\x02" +
		"\x81\x82\x07q\x02\x02\x82\x83\x07n\x02\x02\x83\x84\x07g\x02\x02\x84\x85" +
		"\x070\x02\x02\x85\x86\x07n\x02\x02\x86\x87\x07q\x02\x02\x87\x88\x07i\x02" +
		"\x02\x880\x03\x02\x02\x02\x89\x8C\x053\x1A\x02\x8A\x8C\x055\x1B\x02\x8B" +
		"\x89\x03\x02\x02\x02\x8B\x8A\x03\x02\x02\x02\x8C2\x03\x02\x02\x02\x8D" +
		"\x8F\t\x02\x02\x02\x8E\x8D\x03\x02\x02\x02\x8F\x90\x03\x02\x02\x02\x90" +
		"\x8E\x03\x02\x02\x02\x90\x91\x03\x02\x02\x02\x914\x03\x02\x02\x02\x92" +
		"\x97\x07$\x02\x02\x93\x96\x057\x1C\x02\x94\x96\n\x03\x02\x02\x95\x93\x03" +
		"\x02\x02\x02\x95\x94\x03\x02\x02\x02\x96\x99\x03\x02\x02\x02\x97\x95\x03" +
		"\x02\x02\x02\x97\x98\x03\x02\x02\x02\x98\x9A\x03\x02\x02\x02\x99\x97\x03" +
		"\x02\x02\x02\x9A\x9B\x07$\x02\x02\x9B6\x03\x02\x02\x02\x9C\x9D\x07^\x02" +
		"\x02\x9D\x9E\t\x04\x02\x02\x9E8\x03\x02\x02\x02\x9F\xA3\t\x05\x02\x02" +
		"\xA0\xA2\t\x06\x02\x02\xA1\xA0\x03\x02\x02\x02\xA2\xA5\x03\x02\x02\x02" +
		"\xA3\xA1\x03\x02\x02\x02\xA3\xA4\x03\x02\x02\x02\xA4:\x03\x02\x02\x02" +
		"\xA5\xA3\x03\x02\x02\x02\xA6\xA8\t\x07\x02\x02\xA7\xA6\x03\x02\x02\x02" +
		"\xA8\xA9\x03\x02\x02\x02\xA9\xA7\x03\x02\x02\x02\xA9\xAA\x03\x02\x02\x02" +
		"\xAA\xAB\x03\x02\x02\x02\xAB\xAC\b\x1E\x02\x02\xAC<\x03\x02\x02\x02\t" +
		"\x02\x8B\x90\x95\x97\xA3\xA9\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ReactLexer.__ATN) {
			ReactLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ReactLexer._serializedATN));
		}

		return ReactLexer.__ATN;
	}

}

